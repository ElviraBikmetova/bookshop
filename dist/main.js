/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/style.scss":(e,t,r)=>{r.r(t)},"./src/js/catalog.js":(e,t,r)=>{function o(){const e=document.querySelector(".catalog"),t=e.querySelectorAll(".categories-nav__item"),o=["Architecture","Art","Biography & Autobiography","Business","Crafts & Hobbies","Drama","Fiction","Cooking","Health & Fitness","History","Humor","Poetry","Psychology","Science","Technology","Travel"];let n=!0;const c=e.querySelector(".btn-load-more");let a,s=e.querySelector(".books");const i=document.querySelector(".user-area__cart");async function l(e,t){try{const o=await fetch(`https://www.googleapis.com/books/v1/volumes?q="subject:${e.dataset.index}"&key=AIzaSyANW-xvXkVxLMyE94Ju5GsXYQc2Enq1F_c&printType=books&startIndex=${t}&maxResults=6&langRestrict=en`),c=await o.json();!function(e){let t="";e.forEach((e=>{const o=r("./src/img/book-placeholder.jpeg"),n=`\n            <div class="books-card">\n                <div class="books-card__image">\n                    <img\n                        src="${e.volumeInfo.imageLinks?.thumbnail||o}"\n                    />\n                </div>\n                <div class="books-card__text">\n                    <p class="books-card__gray-text">${e.volumeInfo.authors??""}</p>\n                    <p>${e.volumeInfo.title??""}</p>\n                    <div class="books-card__rating">\n                        <p>${e.volumeInfo.averageRating??""}</p>\n                        <p class="books-card__gray-text">${e.volumeInfo.ratingsCount??""}</p>\n                    </div>\n                    <p class="books-card__gray-text books-card__description">\n                        ${e.volumeInfo.description??""}\n                    </p>\n                    <p>${e.saleInfo.retailPrice?.amount||""}</p>\n                    <button class="btn btn-buy-now">buy now</button>\n                </div>\n            </div>\n          `;t+=n})),n?s.innerHTML=t:s.insertAdjacentHTML("beforeend",t)}(c.items)}catch{console.log("error")}}function d(t){const r=e.querySelector(".active-category");r&&r.classList.remove("active-category"),t.classList.add("active-category")}var u;t.forEach(((e,t)=>{e.dataset.index=o[t],function(e){e.addEventListener("click",(()=>{n=!0,l(e,0),d(e)}))}(e)})),l(u=t[0],0),d(u),i.insertAdjacentHTML("beforeend",'<div class="cart-count cart-hidden"></div>');const p=i.querySelector(".cart-count");let g=0;const v=function(){"buy now"===this.innerHTML?(g++,this.innerHTML="in the cart"):(g--,this.innerHTML="buy now"),g?(p.classList.remove("cart-hidden"),p.innerHTML=g):(p.classList.add("cart-hidden"),p.innerHTML=""),localStorage.getItem("booksInCartCount",g)};!function(){let t=new MutationObserver((r=>{r.forEach((()=>{a=e.querySelectorAll(".btn-buy-now"),a?(function(t){let r=0;c.addEventListener("click",(()=>{const o=e.querySelector(".active-category");n&&(r=6),n=!1,l(o,r),r+=6,t.forEach((e=>{e.removeEventListener("click",v)}))}))}(a),function(e){e.forEach((e=>{e.addEventListener("click",v)}))}(a)):t.disconnect()}))}));t.observe(s,{childList:!0})}()}r.r(t),r.d(t,{initCatalog:()=>o})},"./src/js/slider.js":(e,t,r)=>{r.r(t),r.d(t,{images:()=>o,initSlider:()=>n});let o=[{url:r("./src/img/black-friday-sale.png")},{url:r("./src/img/for-entrepreneurs.png")},{url:r("./src/img/check-out.png")}];function n(e,t){if(!e||!e.length)return;t=t||{dots:!1,autoplay:!1,autoplayInterval:3e3};const r=document.querySelector(".slider"),o=r.querySelector(".slider__images");function n(e){if(o.querySelector(".active").classList.remove("active"),o.querySelector(`.n${e}`).classList.add("active"),t.dots){let t=document.querySelector(".slider__dots");t.querySelector(".active").classList.remove("active"),t.querySelector(`.n${e}`).classList.add("active")}}e.forEach(((e,t)=>{let r=document.createElement("div");r.className=`image n${t} ${t?"":"active"}`,r.dataset.index=t,r.style.backgroundImage=`url(${e.url})`,o.appendChild(r)})),t.dots&&function(){let t=document.createElement("div");t.className="slider__dots",e.forEach(((e,r)=>{let o=document.createElement("div");o.className=`slider__dots-item n${r} ${r?"":"active"}`,o.dataset.index=r,o.addEventListener("click",(function(){n(this.dataset.index)})),t.appendChild(o)})),r.appendChild(t)}(),t.autoplay&&setInterval((()=>{let t=+o.querySelector(".active").dataset.index;n(t===e.length-1?0:t+1)}),t.autoplayInterval)}},"./src/img/black-friday-sale.png":(e,t,r)=>{e.exports=r.p+"img/954eb8e0013338d199a8.png"},"./src/img/book-placeholder.jpeg":(e,t,r)=>{e.exports=r.p+"img/4e5093fb876d4e646006.jpeg"},"./src/img/check-out.png":(e,t,r)=>{e.exports=r.p+"img/b244cee97baca03a47ab.png"},"./src/img/for-entrepreneurs.png":(e,t,r)=>{e.exports=r.p+"img/5c6392925d06c0cbab9e.png"}},t={};function r(o){var n=t[o];if(void 0!==n)return n.exports;var c=t[o]={exports:{}};return e[o](c,c.exports,r),c.exports}r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;r.g.importScripts&&(e=r.g.location+"");var t=r.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e})();var o={};(()=>{r.r(o);r("./src/style.scss");var e=r("./src/js/slider.js"),t=r("./src/js/catalog.js");document.addEventListener("DOMContentLoaded",(()=>{(0,e.initSlider)(e.images,{dots:!0,autoplay:!1,autoplayInterval:5e3}),(0,t.initCatalog)()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RSxNQUFPQyxHQUNSLEdBQXNCLGlCQUFYQyxPQUFxQixPQUFPQSxNQUN4QyxDQUNBLENBUHVCLEdDQXhCbkIsRUFBb0JVLEVBQUksQ0FBQ1UsRUFBS0MsSUFBVVYsT0FBT1csVUFBVUMsZUFBZUMsS0FBS0osRUFBS0MsR0NDbEZyQixFQUFvQnlCLEVBQUtyQixJQUNILG9CQUFYc0IsUUFBMEJBLE9BQU9DLGFBQzFDaEIsT0FBT0MsZUFBZVIsRUFBU3NCLE9BQU9DLFlBQWEsQ0FBRUMsTUFBTyxXQUU3RGpCLE9BQU9DLGVBQWVSLEVBQVMsYUFBYyxDQUFFd0IsT0FBTyxHQUFPLFFDTDlELElBQUlDLEVBQ0E3QixFQUFvQmUsRUFBRWUsZ0JBQWVELEVBQVk3QixFQUFvQmUsRUFBRWdCLFNBQVcsSUFDdEYsSUFBSXhILEVBQVd5RixFQUFvQmUsRUFBRXhHLFNBQ3JDLElBQUtzSCxHQUFhdEgsSUFDYkEsRUFBU3lILGdCQUNaSCxFQUFZdEgsRUFBU3lILGNBQWNDLE1BQy9CSixHQUFXLENBQ2YsSUFBSUssRUFBVTNILEVBQVM0SCxxQkFBcUIsVUFDekNELEVBQVF2RCxTQUFRa0QsRUFBWUssRUFBUUEsRUFBUXZELE9BQVMsR0FBR3NELElBQzVELENBSUQsSUFBS0osRUFBVyxNQUFNLElBQUlPLE1BQU0seURBQ2hDUCxFQUFZQSxFQUFVUSxRQUFRLE9BQVEsSUFBSUEsUUFBUSxRQUFTLElBQUlBLFFBQVEsWUFBYSxLQUNwRnJDLEVBQW9Cc0MsRUFBSVQsMkdDUnhCdEgsU0FBUzhDLGlCQUFpQixvQkFBb0IsTUFNMUMsSUFBQW9CLFlBQVcsRUFBQUYsT0FMUyxDQUNsQkssTUFBTSxFQUNOQyxVQUFVLEVBQ1ZDLGlCQUFrQixPQUdwQixJQUFBekUsY0FBWSIsInNvdXJjZXMiOlsid2VicGFjazovL2Jvb2tzaG9wLy4vc3JjL2pzL2NhdGFsb2cuanMiLCJ3ZWJwYWNrOi8vYm9va3Nob3AvLi9zcmMvanMvc2xpZGVyLmpzIiwid2VicGFjazovL2Jvb2tzaG9wL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2Jvb2tzaG9wL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9ib29rc2hvcC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2Jvb2tzaG9wL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vYm9va3Nob3Avd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly9ib29rc2hvcC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9ib29rc2hvcC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcclxuZXhwb3J0IGZ1bmN0aW9uIGluaXRDYXRhbG9nKCkge1xyXG4gICAgY29uc3QgY2F0YWxvZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXRhbG9nJyk7XHJcbiAgICBjb25zdCBjYXRlZ29yaWVzID0gY2F0YWxvZy5xdWVyeVNlbGVjdG9yQWxsKCcuY2F0ZWdvcmllcy1uYXZfX2l0ZW0nKTtcclxuICAgIGNvbnN0IGNhdGVnb3JpZXNTdWJqZWN0ID0gWydBcmNoaXRlY3R1cmUnLCAnQXJ0JywgJ0Jpb2dyYXBoeSAmIEF1dG9iaW9ncmFwaHknLCAnQnVzaW5lc3MnLCAnQ3JhZnRzICYgSG9iYmllcycsICdEcmFtYScsICdGaWN0aW9uJywgJ0Nvb2tpbmcnLCAnSGVhbHRoICYgRml0bmVzcycsICdIaXN0b3J5JywgJ0h1bW9yJywgJ1BvZXRyeScsICdQc3ljaG9sb2d5JywgJ1NjaWVuY2UnLCAnVGVjaG5vbG9neScsICdUcmF2ZWwnXVxyXG4gICAgbGV0IGlzRmlyc3RMb2FkaWcgPSB0cnVlXHJcbiAgICBjb25zdCBidG5Mb2FkTW9yZSA9IGNhdGFsb2cucXVlcnlTZWxlY3RvcignLmJ0bi1sb2FkLW1vcmUnKTtcclxuICAgIGxldCBib29rcyA9IGNhdGFsb2cucXVlcnlTZWxlY3RvcignLmJvb2tzJyk7XHJcbiAgICBsZXQgYnRuQnV5Tm93XHJcbiAgICBjb25zdCBjYXJ0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnVzZXItYXJlYV9fY2FydCcpXHJcblxyXG4gICAgYXN5bmMgZnVuY3Rpb24gZmV0Y2hEYXRhKGl0ZW0sIHN0YXJ0SW5kZXgpIHtcclxuICAgICAgICBjb25zdCBrZXkgPSBwcm9jZXNzLmVudi5BUElfS0VZXHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcz9xPVwic3ViamVjdDoke2l0ZW0uZGF0YXNldC5pbmRleH1cIiZrZXk9JHtrZXl9JnByaW50VHlwZT1ib29rcyZzdGFydEluZGV4PSR7c3RhcnRJbmRleH0mbWF4UmVzdWx0cz02JmxhbmdSZXN0cmljdD1lbmApO1xyXG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGl0ZW1zID0gcmVzdWx0Lml0ZW1zXHJcbiAgICAgICAgICAgIGNyZWF0ZUJvb2tDYXJkQmxvY2soaXRlbXMpXHJcbiAgICAgICAgfSBjYXRjaCB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvcicpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBjcmVhdGVCb29rQ2FyZEJsb2NrKGl0ZW1zKSB7XHJcblxyXG4gICAgICAgIGxldCBjYXJkcyA9ICcnO1xyXG4gICAgICAgIGl0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgICAgICAgY29uc3QgaW1hZ2VQbGFjZWhvbGRlckxpbmsgPSByZXF1aXJlKFwiLi4vaW1nL2Jvb2stcGxhY2Vob2xkZXIuanBlZ1wiKVxyXG4gICAgICAgICAgICBjb25zdCBjYXJkQmxvY2sgPSBgXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJib29rcy1jYXJkXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYm9va3MtY2FyZF9faW1hZ2VcIj5cclxuICAgICAgICAgICAgICAgICAgICA8aW1nXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNyYz1cIiR7aXRlbS52b2x1bWVJbmZvLmltYWdlTGlua3M/LnRodW1ibmFpbCB8fCBpbWFnZVBsYWNlaG9sZGVyTGlua31cIlxyXG4gICAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJib29rcy1jYXJkX190ZXh0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJib29rcy1jYXJkX19ncmF5LXRleHRcIj4ke2l0ZW0udm9sdW1lSW5mby5hdXRob3JzID8/ICcnfTwvcD5cclxuICAgICAgICAgICAgICAgICAgICA8cD4ke2l0ZW0udm9sdW1lSW5mby50aXRsZSA/PyAnJ308L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJvb2tzLWNhcmRfX3JhdGluZ1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8cD4ke2l0ZW0udm9sdW1lSW5mby5hdmVyYWdlUmF0aW5nID8/ICcnfTwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJib29rcy1jYXJkX19ncmF5LXRleHRcIj4ke2l0ZW0udm9sdW1lSW5mby5yYXRpbmdzQ291bnQgPz8gJyd9PC9wPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwiYm9va3MtY2FyZF9fZ3JheS10ZXh0IGJvb2tzLWNhcmRfX2Rlc2NyaXB0aW9uXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICR7aXRlbS52b2x1bWVJbmZvLmRlc2NyaXB0aW9uID8/ICcnfVxyXG4gICAgICAgICAgICAgICAgICAgIDwvcD5cclxuICAgICAgICAgICAgICAgICAgICA8cD4ke2l0ZW0uc2FsZUluZm8ucmV0YWlsUHJpY2U/LmFtb3VudCB8fCAnJ308L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBidG4tYnV5LW5vd1wiPmJ1eSBub3c8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIGA7XHJcbiAgICAgICAgICBjYXJkcyA9IGNhcmRzICsgY2FyZEJsb2NrO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgaWYgKGlzRmlyc3RMb2FkaWcpIHtcclxuICAgICAgICAgICAgYm9va3MuaW5uZXJIVE1MID0gY2FyZHNcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBib29rcy5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsIGNhcmRzKVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjYXRlZ29yaWVzLmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7XHJcbiAgICAgICAgaXRlbS5kYXRhc2V0LmluZGV4ID0gY2F0ZWdvcmllc1N1YmplY3RbaW5kZXhdXHJcbiAgICAgICAgdXNlclJlcXVlc3QoaXRlbSlcclxuICAgIH0pXHJcblxyXG4gICAgZnVuY3Rpb24gc2V0QWN0aXZlQ2F0ZWdvcnkoaXRlbSkge1xyXG4gICAgICAgIGNvbnN0IGFjdGl2ZUNhdGVnb3J5ID0gY2F0YWxvZy5xdWVyeVNlbGVjdG9yKCcuYWN0aXZlLWNhdGVnb3J5Jyk7XHJcbiAgICAgICAgaWYgKGFjdGl2ZUNhdGVnb3J5KSB7XHJcbiAgICAgICAgICAgIGFjdGl2ZUNhdGVnb3J5LmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmUtY2F0ZWdvcnlcIilcclxuICAgICAgICB9XHJcbiAgICAgICAgaXRlbS5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlLWNhdGVnb3J5XCIpXHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZGVmYXVsdFJlcXVlc3QoaXRlbSkge1xyXG4gICAgICAgIGZldGNoRGF0YShpdGVtLCAwKVxyXG4gICAgICAgIHNldEFjdGl2ZUNhdGVnb3J5KGl0ZW0pXHJcbiAgICB9XHJcblxyXG4gICAgZGVmYXVsdFJlcXVlc3QoY2F0ZWdvcmllc1swXSlcclxuXHJcbiAgICBmdW5jdGlvbiB1c2VyUmVxdWVzdChpdGVtKSB7XHJcbiAgICAgICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgaXNGaXJzdExvYWRpZyA9IHRydWVcclxuICAgICAgICAgICAgZmV0Y2hEYXRhKGl0ZW0sIDApXHJcbiAgICAgICAgICAgIHNldEFjdGl2ZUNhdGVnb3J5KGl0ZW0pXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICB9XHJcblxyXG4gICAgLy8gZnVuY3Rpb24gbG9hZE1vcmUoKSB7XHJcbiAgICAvLyAgICAgbGV0IHN0YXJ0SW5kZXggPSAwXHJcbiAgICAvLyAgICAgYnRuTG9hZE1vcmUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAvLyAgICAgICAgIGNvbnN0IGFjdGl2ZUNhdGVnb3J5ID0gY2F0YWxvZy5xdWVyeVNlbGVjdG9yKCcuYWN0aXZlLWNhdGVnb3J5Jyk7XHJcbiAgICAvLyAgICAgICAgIGlmIChpc0ZpcnN0TG9hZGlnKSB7XHJcbiAgICAvLyAgICAgICAgICAgICBzdGFydEluZGV4ID0gNlxyXG4gICAgLy8gICAgICAgICB9XHJcbiAgICAvLyAgICAgICAgIGlzRmlyc3RMb2FkaWcgPSBmYWxzZVxyXG4gICAgLy8gICAgICAgICBmZXRjaERhdGEoYWN0aXZlQ2F0ZWdvcnksIHN0YXJ0SW5kZXgpXHJcbiAgICAvLyAgICAgICAgIHN0YXJ0SW5kZXggKz0gNlxyXG4gICAgLy8gICAgIH0pXHJcbiAgICAvLyB9XHJcblxyXG5cclxuICAgIGNhcnQuaW5zZXJ0QWRqYWNlbnRIVE1MKCdiZWZvcmVlbmQnLCAnPGRpdiBjbGFzcz1cImNhcnQtY291bnQgY2FydC1oaWRkZW5cIj48L2Rpdj4nKVxyXG4gICAgY29uc3QgYm9va3NDb3VudGVyID0gY2FydC5xdWVyeVNlbGVjdG9yKCcuY2FydC1jb3VudCcpXHJcbiAgICBsZXQgYm9va3NJbkNhcnRDb3VudCA9IDBcclxuXHJcbiAgICBjb25zdCBoYW5kbGVCb29rQnRuID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgLy8gcmV0dXJuIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnaW4gZnVuY3Rpb24oKScpXHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCd0aGlzLmlubmVySFRNTCcsIHRoaXMuaW5uZXJIVE1MKVxyXG4gICAgICAgICAgICBpZiAodGhpcy5pbm5lckhUTUwgPT09ICdidXkgbm93Jykge1xyXG4gICAgICAgICAgICAgICAgYm9va3NJbkNhcnRDb3VudCsrXHJcbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnYm9va3NJbkNhcnRDb3VudCsrJywgYm9va3NJbkNhcnRDb3VudClcclxuICAgICAgICAgICAgICAgIHRoaXMuaW5uZXJIVE1MID0gJ2luIHRoZSBjYXJ0J1xyXG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ2luIGlmIDEnKVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgYm9va3NJbkNhcnRDb3VudC0tXHJcbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnYm9va3NJbkNhcnRDb3VudC0tJywgYm9va3NJbkNhcnRDb3VudClcclxuICAgICAgICAgICAgICAgIHRoaXMuaW5uZXJIVE1MID0gJ2J1eSBub3cnXHJcbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnaW4gZWxzZSAxJylcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoYm9va3NJbkNhcnRDb3VudCkge1xyXG4gICAgICAgICAgICAgICAgYm9va3NDb3VudGVyLmNsYXNzTGlzdC5yZW1vdmUoJ2NhcnQtaGlkZGVuJylcclxuICAgICAgICAgICAgICAgIGJvb2tzQ291bnRlci5pbm5lckhUTUwgPSBib29rc0luQ2FydENvdW50XHJcbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhib29rc0NvdW50ZXIsIGJvb2tzQ291bnRlcilcclxuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdpbiBpZiAyJylcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGJvb2tzQ291bnRlci5jbGFzc0xpc3QuYWRkKCdjYXJ0LWhpZGRlbicpXHJcbiAgICAgICAgICAgICAgICBib29rc0NvdW50ZXIuaW5uZXJIVE1MID0gJydcclxuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdpbiBlbHNlIDInKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdib29rc0luQ2FydENvdW50JywgYm9va3NJbkNhcnRDb3VudClcclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ2Jvb2tzSW5DYXJ0Q291bnQnLCBib29rc0luQ2FydENvdW50KVxyXG4gICAgICAgICAgICAvLyByZXR1cm4gYm9va3NJbkNhcnRDb3VudFxyXG4gICAgICAgIC8vIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBjb25zdCBjbGlja0hhbmRsZXIgPSBoYW5kbGVCb29rQnRuLmJpbmQodGhpcywgaXRlbSlcclxuICAgIC8vIGNvbnN0IGNsaWNrSGFuZGxlciA9IGhhbmRsZUJvb2tCdG4oKVxyXG5cclxuICAgIGZ1bmN0aW9uIGxvYWRNb3JlKGJ0bkJ1eU5vdykge1xyXG4gICAgICAgIGxldCBzdGFydEluZGV4ID0gMFxyXG4gICAgICAgIGJ0bkxvYWRNb3JlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBhY3RpdmVDYXRlZ29yeSA9IGNhdGFsb2cucXVlcnlTZWxlY3RvcignLmFjdGl2ZS1jYXRlZ29yeScpO1xyXG4gICAgICAgICAgICBpZiAoaXNGaXJzdExvYWRpZykge1xyXG4gICAgICAgICAgICAgICAgc3RhcnRJbmRleCA9IDZcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpc0ZpcnN0TG9hZGlnID0gZmFsc2VcclxuICAgICAgICAgICAgZmV0Y2hEYXRhKGFjdGl2ZUNhdGVnb3J5LCBzdGFydEluZGV4KVxyXG4gICAgICAgICAgICBzdGFydEluZGV4ICs9IDZcclxuICAgICAgICAgICAgYnRuQnV5Tm93LmZvckVhY2goaXRlbSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpdGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlQm9va0J0bilcclxuXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICAvLyBsb2FkTW9yZSgpXHJcblxyXG5cclxuICAgIGZ1bmN0aW9uIHdhaXRGb3JFbGVtZW50KCkge1xyXG4gICAgICAgIGxldCBvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKG11dGF0aW9ucyA9PiB7XHJcbiAgICAgICAgICBtdXRhdGlvbnMuZm9yRWFjaCgoKSA9PiB7XHJcbiAgICAgICAgICAgIGJ0bkJ1eU5vdyA9IGNhdGFsb2cucXVlcnlTZWxlY3RvckFsbCgnLmJ0bi1idXktbm93Jyk7XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdidG5CdXlOb3cnLCBidG5CdXlOb3cubGVuZ3RoKVxyXG4gICAgICAgICAgICBpZiAoYnRuQnV5Tm93KSB7XHJcbiAgICAgICAgICAgICAgLy8g0LTQtdC70LDQtdC8INGH0YLQvi3RgtC+INGBINC60L3QvtC/0LrQvtC5XHJcbiAgICAgICAgICAgIC8vICAgY29uc29sZS5sb2coJ011dGF0aW9uT2JzZXJ2ZXInKVxyXG4gICAgICAgICAgICBsb2FkTW9yZShidG5CdXlOb3cpXHJcbiAgICAgICAgICAgIGJ1eU5vdyhidG5CdXlOb3cpXHJcblxyXG4gICAgICAgICAgICAvLyByZXR1cm4gYnRuQnV5Tm93XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBvYnNlcnZlci5kaXNjb25uZWN0KClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZShib29rcywgeyBjaGlsZExpc3Q6IHRydWUgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgd2FpdEZvckVsZW1lbnQoKVxyXG5cclxuXHJcblxyXG4gICAgZnVuY3Rpb24gYnV5Tm93KGJ0bkJ1eU5vdykge1xyXG5cclxuICAgICAgICAvLyBjb25zb2xlLmxvZygnYnRuQnV5Tm93IGluIGYnLCBidG5CdXlOb3cubGVuZ3RoKVxyXG5cclxuICAgICAgICBidG5CdXlOb3cuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnaW4gZm9yRWFjaCcpXHJcbiAgICAgICAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVCb29rQnRuKVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8vIGNvbnN0IGhhbmRsZUJvb2tCdG4gPSBmdW5jdGlvbihpdGVtLCBib29rc0NvdW50ZXIpIHtcclxuICAgIC8vICAgICBjb25zb2xlLmxvZygnaW4gZm9yRWFjaCcpXHJcbiAgICAvLyAgICAgaWYgKGl0ZW0uaW5uZXJIVE1MID09PSAnYnV5IG5vdycpIHtcclxuICAgIC8vICAgICAgICAgYm9va3NJbkNhcnRDb3VudCsrXHJcbiAgICAvLyAgICAgICAgIGNvbnNvbGUubG9nKCdib29rc0luQ2FydENvdW50KysnLCBib29rc0luQ2FydENvdW50KVxyXG4gICAgLy8gICAgICAgICBpdGVtLmlubmVySFRNTCA9ICdpbiB0aGUgY2FydCdcclxuICAgIC8vICAgICAgICAgY29uc29sZS5sb2coJ2luIGlmIDEnKVxyXG4gICAgLy8gICAgIH0gZWxzZSB7XHJcbiAgICAvLyAgICAgICAgIGJvb2tzSW5DYXJ0Q291bnQtLVxyXG4gICAgLy8gICAgICAgICBjb25zb2xlLmxvZygnYm9va3NJbkNhcnRDb3VudC0tJywgYm9va3NJbkNhcnRDb3VudClcclxuICAgIC8vICAgICAgICAgaXRlbS5pbm5lckhUTUwgPSAnYnV5IG5vdydcclxuICAgIC8vICAgICAgICAgY29uc29sZS5sb2coJ2luIGVsc2UgMScpXHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gICAgIGlmIChib29rc0luQ2FydENvdW50KSB7XHJcbiAgICAvLyAgICAgICAgIGJvb2tzQ291bnRlci5jbGFzc0xpc3QucmVtb3ZlKCdjYXJ0LWhpZGRlbicpXHJcbiAgICAvLyAgICAgICAgIGJvb2tzQ291bnRlci5pbm5lckhUTUwgPSBib29rc0luQ2FydENvdW50XHJcbiAgICAvLyAgICAgICAgIC8vIGNvbnNvbGUubG9nKGJvb2tzQ291bnRlciwgYm9va3NDb3VudGVyKVxyXG4gICAgLy8gICAgICAgICBjb25zb2xlLmxvZygnaW4gaWYgMicpXHJcbiAgICAvLyAgICAgfSBlbHNlIHtcclxuICAgIC8vICAgICAgICAgYm9va3NDb3VudGVyLmNsYXNzTGlzdC5hZGQoJ2NhcnQtaGlkZGVuJylcclxuICAgIC8vICAgICAgICAgYm9va3NDb3VudGVyLmlubmVySFRNTCA9ICcnXHJcbiAgICAvLyAgICAgICAgIGNvbnNvbGUubG9nKCdpbiBlbHNlIDInKVxyXG4gICAgLy8gICAgIH1cclxuICAgIC8vICAgICBjb25zb2xlLmxvZygnYm9va3NJbkNhcnRDb3VudCcsIGJvb2tzSW5DYXJ0Q291bnQpXHJcbiAgICAvLyAgICAgLy8gcmV0dXJuIGJvb2tzSW5DYXJ0Q291bnRcclxuICAgIC8vIH1cclxufVxyXG5cclxuLy8gd2FpdEZvckVsZW1lbnQoKVxyXG5cclxuXHJcblxyXG4gICAgLy8gZnVuY3Rpb24gd2FpdEZvclNlbGVjdG9yT25jZShzZWxlY3Rvcikge1xyXG4gICAgLy8gICAgIHJldHVybiAocmVzb2x2ZSkgPT4ge1xyXG4gICAgLy8gICAgICAgbGV0IG9ic2VydmVyID0gbnVsbDtcclxuICAgIC8vICAgICAgIGxldCBjaGVja2VyID0gKCkgPT4ge1xyXG4gICAgLy8gICAgICAgICBpZiAoY2F0YWxvZy5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKSkge1xyXG4gICAgLy8gICAgICAgICAgIG9ic2VydmVyICYmIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcclxuICAgIC8vICAgICAgICAgICByZXNvbHZlKCk7XHJcbiAgICAvLyAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAvLyAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAvLyAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgLy8gICAgICAgICB9XHJcbiAgICAvLyAgICAgICB9O1xyXG5cclxuICAgIC8vICAgICAgIC8vINC/0YDQvtCy0LXRgNGP0LXQvCwg0LzQvtC20LXRgiDQsdGL0YLRjCDRgdC10LvQtdC60YLQvtGAINGB0YDQsNC30YMg0LjQvNC10LXRgtGB0Y8g0L3QsCDRgdGC0YDQsNC90LjRhtC1XHJcbiAgICAvLyAgICAgICAvLyDRgtC+0LPQtNCwINC4INC90LUg0L3QsNC00L4g0LjQvdC40YbQuNCw0LvQuNC30LjRgNC+0LLQsNGC0YwgTXV0YXRpb25PYnNlcnZlclxyXG4gICAgLy8gICAgICAgaWYgKCFjaGVja2VyKCkpIHtcclxuICAgIC8vICAgICAgICAgb2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcihjaGVja2VyKTtcclxuICAgIC8vICAgICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsIHtcclxuICAgIC8vICAgICAgICAgICBhdHRyaWJ1dGVzOiB0cnVlLFxyXG4gICAgLy8gICAgICAgICAgIGNoaWxkTGlzdDogdHJ1ZSxcclxuICAgIC8vICAgICAgICAgICBzdWJ0cmVlOiB0cnVlLFxyXG4gICAgLy8gICAgICAgICB9KTtcclxuICAgIC8vICAgICAgIH1cclxuICAgIC8vICAgICB9O1xyXG4gICAgLy8gfVxyXG5cclxuICAgIC8vIHdhaXRGb3JTZWxlY3Rvck9uY2UoJy5idG4tYnV5LW5vdycpIiwiZXhwb3J0IGxldCBpbWFnZXMgPSBbe1xyXG4gICAgdXJsOiByZXF1aXJlKFwiLi4vLi4vc3JjL2ltZy9ibGFjay1mcmlkYXktc2FsZS5wbmdcIiksXHJcbiAgfSwge1xyXG4gICAgdXJsOiByZXF1aXJlKFwiLi4vLi4vc3JjL2ltZy9mb3ItZW50cmVwcmVuZXVycy5wbmdcIiksXHJcbiAgfSwge1xyXG4gICAgdXJsOiByZXF1aXJlKFwiLi4vLi4vc3JjL2ltZy9jaGVjay1vdXQucG5nXCIpXHJcbiAgfV07XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaW5pdFNsaWRlcihpbWFnZXMsIG9wdGlvbnMpIHtcclxuICBpZiAoIWltYWdlcyB8fCAhaW1hZ2VzLmxlbmd0aCkgcmV0dXJuO1xyXG5cclxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7XHJcbiAgICBkb3RzOiBmYWxzZSxcclxuICAgIGF1dG9wbGF5OiBmYWxzZSxcclxuICAgIGF1dG9wbGF5SW50ZXJ2YWw6IDMwMDBcclxuICB9XHJcblxyXG4gIGNvbnN0IHNsaWRlcldyYXBwZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNsaWRlclwiKTtcclxuICBjb25zdCBzbGlkZXJJbWFnZXMgPSBzbGlkZXJXcmFwcGVyLnF1ZXJ5U2VsZWN0b3IoXCIuc2xpZGVyX19pbWFnZXNcIik7XHJcblxyXG4gIGluaXRJbWFnZXMoKTtcclxuXHJcbiAgaWYgKG9wdGlvbnMuZG90cykge1xyXG4gICAgaW5pdERvdHMoKTtcclxuICB9XHJcblxyXG4gIGlmIChvcHRpb25zLmF1dG9wbGF5KSB7XHJcbiAgICBpbml0QXV0b3BsYXkoKTtcclxuICB9XHJcbiAgXHJcbiAgZnVuY3Rpb24gaW5pdEltYWdlcygpIHtcclxuICAgIGltYWdlcy5mb3JFYWNoKChpbWFnZSwgaW5kZXgpID0+IHtcclxuICAgICAgbGV0IGltYWdlRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICAgIGltYWdlRWxlbWVudC5jbGFzc05hbWUgPSBgaW1hZ2UgbiR7aW5kZXh9ICR7aW5kZXg/IFwiXCIgOiBcImFjdGl2ZVwifWA7XHJcbiAgICAgIGltYWdlRWxlbWVudC5kYXRhc2V0LmluZGV4ID0gaW5kZXg7XHJcbiAgICAgIGltYWdlRWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSBgdXJsKCR7aW1hZ2UudXJsfSlgO1xyXG4gICAgICBzbGlkZXJJbWFnZXMuYXBwZW5kQ2hpbGQoaW1hZ2VFbGVtZW50KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gbW92ZVNsaWRlcihudW0pIHtcclxuICAgIHNsaWRlckltYWdlcy5xdWVyeVNlbGVjdG9yKFwiLmFjdGl2ZVwiKS5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xyXG4gICAgc2xpZGVySW1hZ2VzLnF1ZXJ5U2VsZWN0b3IoYC5uJHtudW19YCkuY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcclxuXHJcbiAgICBpZiAob3B0aW9ucy5kb3RzKSB7XHJcbiAgICAgIGxldCBkb3RzV3JhcHBlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2xpZGVyX19kb3RzXCIpO1xyXG4gICAgICBkb3RzV3JhcHBlci5xdWVyeVNlbGVjdG9yKFwiLmFjdGl2ZVwiKS5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xyXG4gICAgICBkb3RzV3JhcHBlci5xdWVyeVNlbGVjdG9yKGAubiR7bnVtfWApLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIGZ1bmN0aW9uIGluaXREb3RzKCkge1xyXG4gICAgbGV0IGRvdHNXcmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIGRvdHNXcmFwcGVyLmNsYXNzTmFtZSA9IFwic2xpZGVyX19kb3RzXCI7XHJcbiAgICBpbWFnZXMuZm9yRWFjaCgoaW1hZ2UsIGluZGV4KSA9PiB7XHJcbiAgICAgIGxldCBkb3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgICBkb3QuY2xhc3NOYW1lID0gYHNsaWRlcl9fZG90cy1pdGVtIG4ke2luZGV4fSAke2luZGV4PyBcIlwiIDogXCJhY3RpdmVcIn1gO1xyXG4gICAgICBkb3QuZGF0YXNldC5pbmRleCA9IGluZGV4O1xyXG4gICAgICBkb3QuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIG1vdmVTbGlkZXIodGhpcy5kYXRhc2V0LmluZGV4KTtcclxuICAgICAgfSk7XHJcbiAgICAgIGRvdHNXcmFwcGVyLmFwcGVuZENoaWxkKGRvdCk7XHJcbiAgICB9KTtcclxuICAgIHNsaWRlcldyYXBwZXIuYXBwZW5kQ2hpbGQoZG90c1dyYXBwZXIpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gaW5pdEF1dG9wbGF5KCkge1xyXG4gICAgc2V0SW50ZXJ2YWwoKCkgPT4ge1xyXG4gICAgICBsZXQgY3VycmVudE51bWJlciA9ICtzbGlkZXJJbWFnZXMucXVlcnlTZWxlY3RvcihcIi5hY3RpdmVcIikuZGF0YXNldC5pbmRleDtcclxuICAgICAgbGV0IG5leHROdW1iZXIgPSBjdXJyZW50TnVtYmVyID09PSBpbWFnZXMubGVuZ3RoIC0gMT8gMCA6IGN1cnJlbnROdW1iZXIgKyAxO1xyXG4gICAgICBtb3ZlU2xpZGVyKG5leHROdW1iZXIpO1xyXG4gICAgfSwgb3B0aW9ucy5hdXRvcGxheUludGVydmFsKTtcclxuICB9XHJcbn1cclxuXHJcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmNcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIi8vIHJlcXVpcmUoJ2RvdGVudicpLmxvYWQoKTtcclxuXHJcbmltcG9ydCAnLi9zdHlsZS5zY3NzJztcclxuaW1wb3J0IHtpbWFnZXMsIGluaXRTbGlkZXJ9IGZyb20gJy4vanMvc2xpZGVyJztcclxuaW1wb3J0IHsgaW5pdENhdGFsb2csIGZpcnN0Q2F0ZWdvcnlSZXF1ZXN0LCBhbm90aGVyQ2F0ZWdvcnlSZXF1ZXN0IH0gZnJvbSAnLi9qcy9jYXRhbG9nJztcclxuXHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XHJcbiAgICBsZXQgc2xpZGVyT3B0aW9ucyA9IHtcclxuICAgICAgZG90czogdHJ1ZSxcclxuICAgICAgYXV0b3BsYXk6IGZhbHNlLCAvLyDQv9C+0LzQtdC90Y/RgtGMINC90LAgdHJ1ZVxyXG4gICAgICBhdXRvcGxheUludGVydmFsOiA1MDAwXHJcbiAgICB9XHJcbiAgICBpbml0U2xpZGVyKGltYWdlcywgc2xpZGVyT3B0aW9ucyk7XHJcbiAgICBpbml0Q2F0YWxvZygpXHJcbiAgICAvLyBmaXJzdENhdGVnb3J5UmVxdWVzdCgpXHJcbiAgICAvLyBhbm90aGVyQ2F0ZWdvcnlSZXF1ZXN0KClcclxuICB9KTsiXSwibmFtZXMiOlsiaW5pdENhdGFsb2ciLCJjYXRhbG9nIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY2F0ZWdvcmllcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjYXRlZ29yaWVzU3ViamVjdCIsImlzRmlyc3RMb2FkaWciLCJidG5Mb2FkTW9yZSIsImJ0bkJ1eU5vdyIsImJvb2tzIiwiY2FydCIsImFzeW5jIiwiZmV0Y2hEYXRhIiwiaXRlbSIsInN0YXJ0SW5kZXgiLCJyZXNwb25zZSIsImZldGNoIiwiZGF0YXNldCIsImluZGV4IiwicmVzdWx0IiwianNvbiIsIml0ZW1zIiwiY2FyZHMiLCJmb3JFYWNoIiwiaW1hZ2VQbGFjZWhvbGRlckxpbmsiLCJjYXJkQmxvY2siLCJ2b2x1bWVJbmZvIiwiaW1hZ2VMaW5rcyIsInRodW1ibmFpbCIsImF1dGhvcnMiLCJ0aXRsZSIsImF2ZXJhZ2VSYXRpbmciLCJyYXRpbmdzQ291bnQiLCJkZXNjcmlwdGlvbiIsInNhbGVJbmZvIiwicmV0YWlsUHJpY2UiLCJhbW91bnQiLCJpbm5lckhUTUwiLCJpbnNlcnRBZGphY2VudEhUTUwiLCJjcmVhdGVCb29rQ2FyZEJsb2NrIiwiY29uc29sZSIsImxvZyIsInNldEFjdGl2ZUNhdGVnb3J5IiwiYWN0aXZlQ2F0ZWdvcnkiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJhZGQiLCJhZGRFdmVudExpc3RlbmVyIiwidXNlclJlcXVlc3QiLCJib29rc0NvdW50ZXIiLCJib29rc0luQ2FydENvdW50IiwiaGFuZGxlQm9va0J0biIsInRoaXMiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwib2JzZXJ2ZXIiLCJNdXRhdGlvbk9ic2VydmVyIiwibXV0YXRpb25zIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImxvYWRNb3JlIiwiYnV5Tm93IiwiZGlzY29ubmVjdCIsIm9ic2VydmUiLCJjaGlsZExpc3QiLCJ3YWl0Rm9yRWxlbWVudCIsImltYWdlcyIsInVybCIsImluaXRTbGlkZXIiLCJvcHRpb25zIiwibGVuZ3RoIiwiZG90cyIsImF1dG9wbGF5IiwiYXV0b3BsYXlJbnRlcnZhbCIsInNsaWRlcldyYXBwZXIiLCJzbGlkZXJJbWFnZXMiLCJtb3ZlU2xpZGVyIiwibnVtIiwiZG90c1dyYXBwZXIiLCJpbWFnZSIsImltYWdlRWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJzdHlsZSIsImJhY2tncm91bmRJbWFnZSIsImFwcGVuZENoaWxkIiwiZG90IiwiaW5pdERvdHMiLCJzZXRJbnRlcnZhbCIsImN1cnJlbnROdW1iZXIiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJ1bmRlZmluZWQiLCJleHBvcnRzIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImQiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJlIiwid2luZG93Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsIkVycm9yIiwicmVwbGFjZSIsInAiXSwic291cmNlUm9vdCI6IiJ9