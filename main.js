/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/style.scss":(e,t,n)=>{n.r(t)},"./src/js/catalog.js":(e,t,n)=>{n.r(t),n.d(t,{initCatalog:()=>s});var r=n("./src/js/starRating.js"),o=n("./src/js/truncateText.js");function s(){const e=["Architecture","Art","Biography & Autobiography","Business","Crafts & Hobbies","Drama","Fiction","Cooking","Health & Fitness","History","Humor","Poetry","Psychology","Science","Technology","Travel"],t=document.querySelector(".catalog"),s=t.querySelectorAll(".categories-nav__item"),a=t.querySelector(".books"),i=document.querySelector(".user-area__cart"),c=t.querySelector(".btn-load-more");let l,d,u=!0,g=0,p=JSON.parse(localStorage.getItem("booksInTheCart"));p?.length?localStorage.setItem("booksInTheCart",JSON.stringify(p)):localStorage.setItem("booksInTheCart",JSON.stringify([])),p=JSON.parse(localStorage.getItem("booksInTheCart")),i.insertAdjacentHTML("beforeend",'<div class="cart-count cart-hidden"></div>');const m=i.querySelector(".cart-count");let v=p.length;async function y(e,t){try{const r=await fetch(`https://www.googleapis.com/books/v1/volumes?q="subject:${e.dataset.index}"&key=AIzaSyANW-xvXkVxLMyE94Ju5GsXYQc2Enq1F_c&printType=books&startIndex=${t}&maxResults=6`),o=await r.json();!function(e){let t="";e.forEach((e=>{const r=n("./src/img/book-placeholder.jpeg"),o=e.volumeInfo.averageRating,s=e.volumeInfo.ratingsCount,a=`\n            <div class="books-card">\n                <div class="books-card__image">\n                    <img\n                        src="${e.volumeInfo.imageLinks?.thumbnail||r}"\n                    />\n                </div>\n                <div class="books-card__text">\n                    <div class="books-card__header">\n                        <p class="books-card__authors books-card__gray-text">${e.volumeInfo.authors?.join(", ")??""}</p>\n                        <p class="books-card__title">${e.volumeInfo.title??""}</p>\n                        <div class="books-card__rating">\n                        ${o?`<form class="rating" data-index=${o}>\n                                <p class="rating__value" style="display:none">${e.volumeInfo.averageRating??""}</p>\n                                <div class="rating__active"></div>\n                                <div class="rating__items">\n                                    <input type="radio" class="raitin__item" value="1" name="rating">\n                                    <input type="radio" class="raitin__item" value="2" name="rating">\n                                    <input type="radio" class="raitin__item" value="3" name="rating">\n                                    <input type="radio" class="raitin__item" value="4" name="rating">\n                                    <input type="radio" class="raitin__item" value="5" name="rating">\n                                </div>\n                            </form>\n                            <p class="books-card__gray-text">\n                                ${s?s+" review":""}\n                            </p>`:""}\n                        </div>\n                    </div>\n                    <p class="books-card__gray-text books-card__description">\n                        ${e.volumeInfo.description??""}\n                    </p>\n                    <p class="books-card__price">${e.saleInfo.retailPrice?.amount?"â‚½"+e.saleInfo.retailPrice?.amount:""}</p>\n                    <button class="btn btn-buy-now ${p.includes(e.id)&&"in-the-cart"}" data-index=${e.id}>\n                        ${p.includes(e.id)?"in the cart":"buy now"}\n                    </button>\n                </div>\n            </div>\n          `;t+=a})),u?a.innerHTML=t:a.insertAdjacentHTML("beforeend",t);c.style.visibility="visible"}(o.items)}catch{console.log("error")}}const f=function(){u=!0,c.removeEventListener("click",S,{once:!0}),this.classList.contains("active-category")||h(this)};function h(e){y(e,0),function(e){d=t.querySelector(".active-category"),d&&d.classList.remove("active-category"),e.classList.add("active-category")}(e)}function b(){m.classList.remove("cart-hidden"),m.innerHTML=v}s.forEach(((t,n)=>{t.dataset.index=e[n],function(e){e.addEventListener("click",f)}(t)})),h(s[0]),v>0&&b();const _=function(){let e=this.dataset.index;-1===p.indexOf(e)?(p.push(e),this.innerHTML="in the cart"):(p.splice(p.indexOf(e),1),this.innerHTML="buy now"),this.classList.toggle("in-the-cart"),v=p.length,localStorage.setItem("booksInTheCart",JSON.stringify(p)),v>0?b():(m.classList.add("cart-hidden"),m.innerHTML="")};const S=function(){d=t.querySelector(".active-category"),u&&(g=6),u=!1,y(d,g),g+=6,l.forEach((e=>{e.removeEventListener("click",_)}))};!function(){let e=new MutationObserver((n=>{n.forEach((()=>{l=t.querySelectorAll(".btn-buy-now");const n=t.querySelectorAll(".books-card__description");l?(c.addEventListener("click",S,{once:!0}),function(e){e.forEach((e=>{e.addEventListener("click",_)}))}(l),(0,r.starRating)(),(0,o.truncateText)(n)):e.disconnect()}))}));e.observe(a,{childList:!0})}()}},"./src/js/gotop.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r=function(){const e=document.querySelector(".go-top");window.addEventListener("scroll",(function(){const t=window.scrollY,n=document.documentElement.clientHeight;t>n?e.classList.add("go-top_show"):e.classList.remove("go-top_show")})),e.addEventListener("click",(function e(){window.scrollY>0&&(window.scrollBy(0,-75),setTimeout(e,0))}))}},"./src/js/menuBurger.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r=function(){const e=document.querySelector("body"),t=e.querySelector(".header__burger"),n=e.querySelector(".header__nav"),r=e.querySelector(".user-area");t.addEventListener("click",(o=>{t.classList.toggle("active"),n.classList.toggle("active"),r.classList.toggle("active"),e.classList.toggle("lock")}))}},"./src/js/slider.js":(e,t,n)=>{n.r(t),n.d(t,{images:()=>r,initSlider:()=>o});let r=[{url:n("./src/img/black-friday-sale.png")},{url:n("./src/img/for-entrepreneurs.png")},{url:n("./src/img/check-out.png")}];function o(e,t){if(!e||!e.length)return;t=t||{dots:!1,autoplay:!1,autoplayInterval:3e3};const n=document.querySelector(".slider"),r=n.querySelector(".slider__images");function o(e){if(r.querySelector(".active").classList.remove("active"),r.querySelector(`.n${e}`).classList.add("active"),t.dots){let t=document.querySelector(".slider__dots");t.querySelector(".active").classList.remove("active"),t.querySelector(`.n${e}`).classList.add("active")}}e.forEach(((e,t)=>{let n=document.createElement("div");n.className=`image n${t} ${t?"":"active"}`,n.dataset.index=t,n.style.backgroundImage=`url(${e.url})`,r.appendChild(n)})),t.dots&&function(){let t=document.createElement("div");t.className="slider__dots",e.forEach(((e,n)=>{let r=document.createElement("div");r.className=`slider__dots-item n${n} ${n?"":"active"}`,r.dataset.index=n,r.addEventListener("click",(function(){o(this.dataset.index)})),t.appendChild(r)})),n.appendChild(t)}(),t.autoplay&&setInterval((()=>{let t=+r.querySelector(".active").dataset.index;o(t===e.length-1?0:t+1)}),t.autoplayInterval)}},"./src/js/starRating.js":(e,t,n)=>{function r(){const e=document.querySelectorAll(".rating");e.length>0&&function(){let t,n;for(let t=0;t<e.length;t++){r(e[t])}function r(e){o(e),s()}function o(e){t=e.querySelector(".rating__active"),n=e.dataset.index}function s(e=n){const r=e/.05;t.style.width=`${r}%`}}()}n.r(t),n.d(t,{starRating:()=>r})},"./src/js/truncateText.js":(e,t,n)=>{function r(e){let t;e.forEach((e=>{for(t=e.innerHTML.trim();e.clientHeight<e.scrollHeight&&(t=e.innerHTML.trim(),!(t.split(" ").length<=1));)e.innerHTML=t.replace(/\W*\s(\S)*$/,"...")}))}n.r(t),n.d(t,{truncateText:()=>r})},"./src/img/black-friday-sale.png":(e,t,n)=>{e.exports=n.p+"img/954eb8e0013338d199a8.png"},"./src/img/book-placeholder.jpeg":(e,t,n)=>{e.exports=n.p+"img/4e5093fb876d4e646006.jpeg"},"./src/img/check-out.png":(e,t,n)=>{e.exports=n.p+"img/b244cee97baca03a47ab.png"},"./src/img/for-entrepreneurs.png":(e,t,n)=>{e.exports=n.p+"img/5c6392925d06c0cbab9e.png"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,n),s.exports}n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})();var r={};(()=>{n.r(r);n("./src/style.scss");var e=n("./src/js/slider.js"),t=n("./src/js/catalog.js"),o=n("./src/js/menuBurger.js"),s=n("./src/js/gotop.js");document.addEventListener("DOMContentLoaded",(()=>{(0,e.initSlider)(e.images,{dots:!0,autoplay:!1,autoplayInterval:5e3}),(0,t.initCatalog)(),(0,o.default)(),(0,s.default)()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,